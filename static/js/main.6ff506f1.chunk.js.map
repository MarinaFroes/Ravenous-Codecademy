{"version":3,"sources":["components/Business/Business.js","components/BusinessList/BusinessList.js","components/SearchBar/SearchBar.js","util/Yelp.js","App.js","serviceWorker.js","index.js"],"names":["BusinessDiv","styled","div","_templateObject","ImageContainer","img","_templateObject2","BusinessName","h2","_templateObject3","BusinessInfo","_templateObject4","Info","p","_templateObject5","BusinessAddress","_templateObject6","BusinessReviews","_templateObject7","Business","react_default","a","createElement","className","src","this","props","business","imageSrc","alt","name","address","city","state","zipCode","category","rating","reviewCount","React","Component","BusinessListDiv","BusinessList_templateObject","BusinessList","businesses","map","components_Business_Business","key","id","sortByOptions","Best Match","Highest Rated","Most Reviewed","SearchBar","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","term","location","sortBy","handleLocationChange","bind","assertThisInitialized","handleTermChange","handleSearch","_this2","keys","sortByOption","sortByOptionValue","getSortByClass","onClick","handleSortByChange","setState","event","target","value","searchYelp","preventDefault","renderSortByOptions","placeholder","onChange","Yelp","search","fetch","concat","headers","Authorization","then","response","json","jsonResponse","console","log","image_url","address1","zip_code","categories","title","review_count","App","components_SearchBar_SearchBar","components_BusinessList_BusinessList","Boolean","window","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"0+CAGA,IAAMA,EAAcC,IAAOC,IAAVC,KAQXC,EAAiBH,IAAOI,IAAVC,KAKdC,EAAeN,IAAOO,GAAVC,KAMZC,EAAeT,IAAOC,IAAVS,KAKZC,EAAOX,IAAOY,EAAVC,KAMJC,EAAkBd,IAAOC,IAAVc,KAMfC,EAAkBhB,IAAOC,IAAVgB,KA4CNC,mLAzBX,OACEC,EAAAC,EAAAC,cAACtB,EAAD,CAAauB,UAAU,YACrBH,EAAAC,EAAAC,cAAClB,EAAD,CAAgBmB,UAAU,mBACxBH,EAAAC,EAAAC,cAAA,OAAKE,IAAKC,KAAKC,MAAMC,SAASC,SAAUC,IAAI,MAE9CT,EAAAC,EAAAC,cAACf,EAAD,KAAekB,KAAKC,MAAMC,SAASG,MACnCV,EAAAC,EAAAC,cAACZ,EAAD,CAAca,UAAU,wBACtBH,EAAAC,EAAAC,cAACP,EAAD,CAAiBQ,UAAU,oBACzBH,EAAAC,EAAAC,cAACV,EAAD,KAAOa,KAAKC,MAAMC,SAASI,SAC3BX,EAAAC,EAAAC,cAACV,EAAD,KAAOa,KAAKC,MAAMC,SAASK,MAC3BZ,EAAAC,EAAAC,cAACV,EAAD,KACGa,KAAKC,MAAMC,SAASM,MADvB,IAC+BR,KAAKC,MAAMC,SAASO,UAGrDd,EAAAC,EAAAC,cAACL,EAAD,CAAiBM,UAAU,oBACzBH,EAAAC,EAAAC,cAAA,UAAKG,KAAKC,MAAMC,SAASQ,UACzBf,EAAAC,EAAAC,cAAA,MAAIC,UAAU,UAAUE,KAAKC,MAAMC,SAASS,OAA5C,UACAhB,EAAAC,EAAAC,cAAA,SAAIG,KAAKC,MAAMC,SAASU,YAAxB,sBAnBWC,IAAMC,oLCpD7B,IAAMC,EAAkBvC,IAAOC,IAAVuC,KAmBNC,mLAVX,OACEtB,EAAAC,EAAAC,cAACkB,EAAD,CAAiBjB,UAAU,gBACxBE,KAAKC,MAAMiB,WAAWC,IAAI,SAAAjB,GACzB,OAAOP,EAAAC,EAAAC,cAACuB,EAAD,CAAUlB,SAAUA,EAAUmB,IAAKnB,EAASoB,eALlCT,IAAMC,WCR3BS,SAAgB,CACpBC,aAAc,aACdC,gBAAiB,SACjBC,gBAAiB,iBAiEJC,cA7Db,SAAAA,EAAY1B,GAAO,IAAA2B,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAA7B,KAAA2B,IACjBC,EAAAC,OAAAE,EAAA,EAAAF,CAAA7B,KAAA6B,OAAAG,EAAA,EAAAH,CAAAF,GAAAM,KAAAjC,KAAMC,KACDO,MAAQ,CACX0B,KAAM,GACNC,SAAU,GACVC,OAAQ,cAGVR,EAAKS,qBAAuBT,EAAKS,qBAAqBC,KAA1BT,OAAAU,EAAA,EAAAV,QAAAU,EAAA,EAAAV,CAAAD,KAC5BA,EAAKY,iBAAmBZ,EAAKY,iBAAiBF,KAAtBT,OAAAU,EAAA,EAAAV,QAAAU,EAAA,EAAAV,CAAAD,KACxBA,EAAKa,aAAeb,EAAKa,aAAaH,KAAlBT,OAAAU,EAAA,EAAAV,QAAAU,EAAA,EAAAV,CAAAD,KAVHA,qFAaG,IAAAc,EAAA1C,KACpB,OAAO6B,OAAOc,KAAKpB,GAAeJ,IAAI,SAAAyB,GACpC,IAAIC,EAAoBtB,EAAcqB,GACtC,OAAOjD,EAAAC,EAAAC,cAAA,MAAIwB,IAAKwB,EAAmB/C,UAAW4C,EAAKI,eAAeD,GAAoBE,QAASL,EAAKM,mBAAmBV,KAAKI,EAAMG,IAAqBD,4CAI5IA,GACb,OAAQ5C,KAAKQ,MAAM4B,SAAWQ,EAAe,SAAW,8CAGvCA,GACjB5C,KAAKiD,SAAS,CAAEb,OAASQ,6CAGVM,GACflD,KAAKiD,SAAS,CAAEf,KAAOgB,EAAMC,OAAOC,qDAGjBF,GACnBlD,KAAKiD,SAAS,CAAEd,SAAWe,EAAMC,OAAOC,6CAG7BF,GACXlD,KAAKC,MAAMoD,WAAWrD,KAAKQ,MAAM0B,KAAMlC,KAAKQ,MAAM2B,SAAUnC,KAAKQ,MAAM4B,QACvEc,EAAMI,kDAIN,OACE3D,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,0BACbH,EAAAC,EAAAC,cAAA,UACGG,KAAKuD,wBAGV5D,EAAAC,EAAAC,cAAA,OAAKC,UAAU,oBACbH,EAAAC,EAAAC,cAAA,SAAO2D,YAAY,oBAAoBC,SAAUzD,KAAKwC,mBACtD7C,EAAAC,EAAAC,cAAA,SAAO2D,YAAY,SAASC,SAAUzD,KAAKqC,wBAE7C1C,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mBAAmBiD,QAAS/C,KAAKyC,cAC9C9C,EAAAC,EAAAC,cAAA,8BAvDcgB,IAAMC,WCwBf4C,EA/BF,CACTC,OADS,SACFzB,EAAMC,EAAUC,GACnB,OAAOwB,MAAK,sFAAAC,OAAuF3B,EAAvF,cAAA2B,OAAwG1B,EAAxG,aAAA0B,OAA4HzB,GAAU,CAC9I0B,QAAS,CACLC,cAAa,UAAAF,OANd,uIAQJG,KAAK,SAAAC,GACJ,OAAOA,EAASC,SACjBF,KAAK,SAAAG,GACJ,GAAIA,EAAajD,WACb,OAAOiD,EAAajD,WAAWC,IAAI,SAAAjB,GAE/B,OADAkE,QAAQC,IAAInE,GACL,CACHoB,GAAIpB,EAASoB,GACbnB,SAAUD,EAASoE,UACnBjE,KAAMH,EAASG,KACfC,QAASJ,EAASiC,SAASoC,SAC3BhE,KAAML,EAASiC,SAAS5B,KACxBC,MAAON,EAASiC,SAAS3B,MACzBC,QAASP,EAASiC,SAASqC,SAC3B9D,SAAUR,EAASuE,WAAW,GAAGC,MACjC/D,OAAQT,EAASS,OACjBC,YAAaV,EAASyE,oBCQ/BC,cAzBb,SAAAA,EAAY3E,GAAO,IAAA2B,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAA7B,KAAA4E,IACjBhD,EAAAC,OAAAE,EAAA,EAAAF,CAAA7B,KAAA6B,OAAAG,EAAA,EAAAH,CAAA+C,GAAA3C,KAAAjC,KAAMC,KACDO,MAAQ,CACXU,WAAY,IAEdU,EAAKyB,WAAazB,EAAKyB,WAAWf,KAAhBT,OAAAU,EAAA,EAAAV,QAAAU,EAAA,EAAAV,CAAAD,KALDA,0EAQRM,EAAMC,EAAUC,GAAQ,IAAAM,EAAA1C,KACjC0D,EAAKC,OAAOzB,EAAMC,EAAUC,GAAQ4B,KAAK,SAAA9C,GACvCwB,EAAKO,SAAS,CAAE/B,WAAYA,uCAK9B,OACEvB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACbH,EAAAC,EAAAC,cAAA,sBACAF,EAAAC,EAAAC,cAACgF,EAAD,CAAWxB,WAAYrD,KAAKqD,aAC5B1D,EAAAC,EAAAC,cAACiF,EAAD,CAAc5D,WAAYlB,KAAKQ,MAAMU,qBApB3BL,IAAMC,WCMJiE,QACW,cAA7BC,OAAO7C,SAAS8C,UAEe,UAA7BD,OAAO7C,SAAS8C,UAEhBD,OAAO7C,SAAS8C,SAASC,MACvB,2DCZNC,IAASC,OAAOzF,EAAAC,EAAAC,cAACwF,EAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAM1B,KAAK,SAAA2B,GACjCA,EAAaC","file":"static/js/main.6ff506f1.chunk.js","sourcesContent":["import React from \"react\";\nimport styled from \"styled-components\";\n\nconst BusinessDiv = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n  width: 16.66rem;\n  margin: 0 0.5rem 2.3rem 0.5rem;\n`;\n\nconst ImageContainer = styled.img`\n  height: 16.66rem;\n  margin-bottom: 1rem;\n`;\n\nconst BusinessName = styled.h2`\n  margin-bottom: 0.5rem;\n  font-size: 1.2rem;\n  font-weight: 600;\n`;\n\nconst BusinessInfo = styled.div`\n  display: flex;\n  justify-content: space-between;\n`;\n\nconst Info = styled.p`\n  font-size: 0.88rem;\n  font-weight: 300;\n  line-height: 1rem;\n`;\n\nconst BusinessAddress = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n`;\n\nconst BusinessReviews = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n  text-align: right;\n\n  .Business-reviews h3 {\n    color: #cca353;\n    font-weight: 600;\n  }\n\n  .Business-reviews .rating {\n    font-size: 0.88rem;\n    line-height: 1rem;\n  }\n`;\n\nclass Business extends React.Component {\n  render() {\n    return (\n      <BusinessDiv className=\"Business\">\n        <ImageContainer className=\"image-container\">\n          <img src={this.props.business.imageSrc} alt=\"\" />\n        </ImageContainer>\n        <BusinessName>{this.props.business.name}</BusinessName>\n        <BusinessInfo className=\"Business-information\">\n          <BusinessAddress className=\"Business-address\">\n            <Info>{this.props.business.address}</Info>\n            <Info>{this.props.business.city}</Info>\n            <Info>\n              {this.props.business.state} {this.props.business.zipCode}\n            </Info>\n          </BusinessAddress>\n          <BusinessReviews className=\"Business-reviews\">\n            <h3>{this.props.business.category}</h3>\n            <h3 className=\"rating\">{this.props.business.rating} stars</h3>\n            <p>{this.props.business.reviewCount} reviews</p>\n          </BusinessReviews>\n        </BusinessInfo>\n      </BusinessDiv>\n    );\n  }\n}\n\nexport default Business;\n","import React from \"react\";\nimport Business from \"../Business/Business\";\nimport styled from \"styled-components\";\n\nconst BusinessListDiv = styled.div`\n  display: flex;\n  justify-content: space - around;\n  flex-wrap: wrap;\n  margin: 4.4rem 10 %;\n`;\n\nclass BusinessList extends React.Component {\n  render() {\n    return (\n      <BusinessListDiv className=\"BusinessList\">\n        {this.props.businesses.map(business => {\n          return <Business business={business} key={business.id} />;\n        })}\n      </BusinessListDiv>\n    );\n  }\n}\n\nexport default BusinessList;\n","import React from 'react';\nimport './SearchBar.css';\n\nconst sortByOptions = {\n  'Best Match': 'best_match',\n  'Highest Rated': 'rating',\n  'Most Reviewed': 'review_count'\n};\n\nclass SearchBar extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      term: '',\n      location: '',\n      sortBy: 'best_match'\n    };\n    \n    this.handleLocationChange = this.handleLocationChange.bind(this);\n    this.handleTermChange = this.handleTermChange.bind(this);\n    this.handleSearch = this.handleSearch.bind(this);\n  }\n\n  renderSortByOptions() {\n    return Object.keys(sortByOptions).map(sortByOption => {\n      let sortByOptionValue = sortByOptions[sortByOption];\n      return <li key={sortByOptionValue} className={this.getSortByClass(sortByOptionValue)} onClick={this.handleSortByChange.bind(this, sortByOptionValue)}>{sortByOption}</li>;\n    });\n  }\n\n  getSortByClass(sortByOption) {\n    return (this.state.sortBy === sortByOption ? 'active' : '');\n  }\n\n  handleSortByChange(sortByOption) {\n    this.setState({ sortBy : sortByOption });\n  }\n\n  handleTermChange(event) {\n    this.setState({ term : event.target.value });\n  }\n\n  handleLocationChange(event) {\n    this.setState({ location : event.target.value });\n  }\n\n  handleSearch(event) {\n    this.props.searchYelp(this.state.term, this.state.location, this.state.sortBy);\n    event.preventDefault();\n  }\n\n  render() {\n    return (\n      <div className=\"SearchBar\">\n        <div className=\"SearchBar-sort-options\">\n          <ul>\n            {this.renderSortByOptions()}\n          </ul>\n        </div>\n        <div className=\"SearchBar-fields\">\n          <input placeholder=\"Search Businesses\" onChange={this.handleTermChange}/>\n          <input placeholder=\"Where?\" onChange={this.handleLocationChange}/>\n        </div>\n        <div className=\"SearchBar-submit\" onClick={this.handleSearch}>\n          <a>Let's Go</a>\n        </div>\n      </div>\n    )\n  }\n};\n\nexport default SearchBar;\n","const apiKey = 'jDr8SJGs9QGAGDdmj-mxS640SsEeJ_NE_7TXY5vEGbyyqXSfSVqqKgSbPtPJD3WMHgZUpc8toRfbshLpxiqE2acMt0aPudbxHx_olqE2iGD3LiHc-XSUdUMMRVIaXHYx';\n\nconst Yelp = {\n    search(term, location, sortBy) {\n        return fetch(`https://cors-anywhere.herokuapp.com/https://api.yelp.com/v3/businesses/search?term=${term}&location=${location}&sort_by=${sortBy}`, {\n            headers: {\n                Authorization: `Bearer ${apiKey}`\n            }\n        }).then(response => {\n            return response.json();\n        }).then(jsonResponse => {\n            if (jsonResponse.businesses) {\n                return jsonResponse.businesses.map(business => {\n                    console.log(business);\n                    return {\n                        id: business.id,\n                        imageSrc: business.image_url,\n                        name: business.name,\n                        address: business.location.address1,\n                        city: business.location.city,\n                        state: business.location.state,\n                        zipCode: business.location.zip_code,\n                        category: business.categories[0].title,\n                        rating: business.rating,\n                        reviewCount: business.review_count\n                    };\n                });\n            };\n        });\n    }\n};\n\n\nexport default Yelp;","import React from 'react';\nimport './App.css';\nimport BusinessList from './components/BusinessList/BusinessList';\nimport SearchBar from './components/SearchBar/SearchBar';\nimport Yelp from './util/Yelp';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      businesses: []\n    };\n    this.searchYelp = this.searchYelp.bind(this);\n  }\n\n  searchYelp(term, location, sortBy) {\n    Yelp.search(term, location, sortBy).then(businesses => {\n      this.setState({ businesses: businesses });\n    });\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <h1>ravenous</h1>\n        <SearchBar searchYelp={this.searchYelp} />\n        <BusinessList businesses={this.state.businesses} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}